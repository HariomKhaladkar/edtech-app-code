name: Build, Test, Scan, Push, and Deploy User Service

on:
  push:
    branches: [ "main" ]
    # The 'paths' filter has been removed to guarantee this workflow runs.

jobs:
  # Job 1: Build the Docker Image
  build:
    runs-on: ubuntu-latest
    outputs:
      image_tag: ${{ github.sha }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./user-service
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/user-service:${{ github.sha }}
          no-cache: true



  # Job 2: Run API tests
  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Run API tests with Newman
        run: |
          IMAGE_TAG=${{ needs.build.outputs.image_tag }}
          CONTAINER_NAME=user-service-test-container
          docker pull ${{ secrets.DOCKERHUB_USERNAME }}/user-service:$IMAGE_TAG
          docker run -d --name $CONTAINER_NAME -p 8080:8080 ${{ secrets.DOCKERHUB_USERNAME }}/user-service:$IMAGE_TAG
          echo "Waiting for the service to start..."
          timeout 30s bash -c 'until curl -s http://localhost:8080 > /dev/null; do echo "Waiting..."; sleep 2; done'
          echo "Service is up!"
          docker run -v $(pwd):/etc/newman --network=host -t postman/newman:latest run "user-service/tests/user-service-tests.json" --verbose
          echo "Cleaning up the test container..."
          docker stop $CONTAINER_NAME
          docker rm $CONTAINER_NAME

  # Job 3: Scan the container for security vulnerabilities
  scan:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Scan container image for vulnerabilities
        uses: snyk/actions/docker@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          image: ${{ secrets.DOCKERHUB_USERNAME }}/user-service:${{ needs.build.outputs.image_tag }}
          # CORRECTED ARGUMENT: Use --severity-threshold instead of --fail-on
          args: --severity-threshold=high

  # Job 4: Update the deployment configuration
  update_deployment:
    needs: [test, scan]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout infra config repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.REPO_ACCESS_TOKEN }}
          repository: HariomKhaladkar/edtech-infra-config
      - name: Update image tag in user-service manifest
        run: |
          sed -i 's|tag: ".*"|tag: "${{ github.sha }}"|' argocd-apps/user-service-app.yaml
      - name: Commit and push the updated tag
        run: |
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "actions@github.com"
          git add .
          if ! git diff-index --quiet HEAD; then
            git commit -m "AUTODEPLOY(user-service): Update image tag to ${{ github.sha }}"
            git push
          else
            echo "No changes to commit."
          fi